name: AWS Lambda Layer Builder
description: Creates an AWS Lambda Layer and uploads layer to a S3 bucket.  Add permisions to the Lambda Layer to grant access to other accounts. 

branding:
  icon: layers
  color: orange

inputs:
  layer-name:
    description: Name for the Lambda Layer
    required: true
  layer-directory:
    description: Working directory in repository where requirements file exists
    required: true
  runtime:
    description: AWS Lambda Runtime
    required: true
  bucketname:
    description: AWS S3 Bucket Name where layer will be uploaded
    required: true
  prefix-folder-path:
    description: An optional prefix that will be used for a folder path inside the S3 bucket
  principal:
    description: An AWS Account ID to grant layer usage permissions to.  
    required: true
  # compatible-runtimes:
  #   description: A list of compatible function runtimes . Used for filtering with ListLayers and ListLayerVersions.

runs:
  using: 'composite'
  steps:

    - name: Install Python Requirements
      shell: bash
      working-directory: ${{ inputs.layer-directory }}
      run: |
        if [ ${{ inputs.runtime }} -eq "python" ]
        then
          echo "Building Python Layer"
          mkdir -p python && pip install -r requirements.txt -t ./python
          zip -r lambda_layer.zip ./python
        elif [ ${{ inputs.runtime }} -eq "node" ]
        then
          echo "Building Node Layer"
          mkdir -p nodejs/node_modules && npm install -r requirements.txt -t ./nodejs/node_modules
          zip -r lambda_layer.zip ./nodejs/node_modules
        else
          echo "Something else was specified for runtime"
        fi

    - name: Installing boto3
      shell: bash
      run: pip3 install boto3

    - name: Upload Zip and Create Layer
      shell: bash
      id: build-layer
      working-directory: ${{ inputs.layer-directory }}
      run: |
        DATE=$(date +"%d_%m_%Y")
        FOLDER_PATH="${{ inputs.prefix-folder-path }}"
        LAYER_NAME="${{ inputs.layer-name }}-${DATE}"
        aws s3 cp ./lambda_layer.zip s3://${{ inputs.bucketname }}/${{ inputs.prefix-folder-path }}/lambda_layer.zip
        response=$(aws lambda publish-layer-version --layer-name ${{ inputs.layer-name }} \
        --description "${{ inputs.layer-name }} Layer" \
        --content S3Bucket=${{ inputs.bucketname }},S3Key=${{ inputs.prefix-folder-path }}/lambda_layer.zip

        layer_version=$(echo $response | jq -r '.Version')
        echo "::set-output name=layer_version::$(echo $response | jq -r '.Version')"
        echo "::set-output name=layer_arn::$(echo $response | jq -r '.LayerArn')"
        echo "::set-output name=layer_name::${{ inputs.layer-name }}"
    
    - uses: actions/upload-artifact@v2
      with:
        name: lambda-layer
        path: ./${{ inputs.layer-directory }}/lambda_layer.zip
        retention-days: 5

    - name: Lambda Layer Permission
      shell: bash
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
        aws lambda add-layer-version-permission --layer-name ${{ steps.build-layer.outputs.layer_name }} \
        --version-number ${{ steps.build-layer.outputs.layer_version }} --action lambda:GetLayerVersion \
        --statement-id GrantAccountAccess --principal ${{ inputs.principal }}
